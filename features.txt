admin:

lister TOUS LES posts
telecharger post
uploader post
(un upload remplace l'ancienne version si existante donc pas modif pour l'instant)
supprimer post (peut etre mode caché avec point devant le nom)
toute action protégée par mot de passe

gestion des pages aussi, avec possibilité de les afficher ou cacher du menu

Technique:
cacher metadonnées peut etre au debut de chaque fichier markdown, ou alors dans un fichier à part (mon-article.md -> mon-article.data)
lancer le serveur http/https dans une goroutine

coté view:
layout personnalisable grace aux templates go
liste posts
voir post (titre + début article, pagination)
rendu menu


Puisque la complexité du truc est pas forcément élevée, alors on va essayer de se passer d'une API,
ainsi que des trois tonnes de requetes/traitements JavaScript qui rendent le bousin hyper lourd.
On ne veut pas de base de donnée, donc il est logique de ne pas écrire d'API.

UN BUT : MAXIMISER LES TRAITEMENTS COTE SERVEUR POUR LE RENDU DE LA PAGE
MULTIPLATEFORME

SUPPORT POUR HTTPS

client CLI :
gérer mot de passe admin (stocké hashé dans un fichier à la racine peut etre)
supprimer post
démarrer/stopper serveur (attention, stopper est très important)



dépendances anticipées:
un router http style httprouter de julienschmidt
stdlib de golang (html/template, net/http, crypto, ...)
bibliothèque markdown

pas de dépendance à un framework css ou js, tout sera écrit à la main, sans même Leloux

Dans l'idée, plus tard (PLUS TARS G DIT) : catégoriser les articles, multilingue


Structure code :

/nomCMS
- /server
  - /admin
  - /website
  - server.go qui permet de lier le tout
- /cli
- main.go qui permet de lier le tout

Structure page :
- /posts (contient articles en md)
- /pages (contient pages additionelles en md)
- /assets pour page accueil (md + template), affichage post (md + template), entete menu
  - /public pour css et js
- /cdn
- config.json ou yaml


fichier de configuration :
- chemin pour certificats/clés pour SSL/TLS
- nom de domaine d'écoute, port (utilisation de proxy ou non)
- chemin du logo, titre, sous titre